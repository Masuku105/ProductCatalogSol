@model ProductCatalogWeb.Models.ProductListViewModel

@{
    ViewData["Title"] = "Products";
}

<h2>Products</h2>

<!-- Live search input only -->
<input id="searchInput" class="form-control mb-3" placeholder="Search products..." />

<!-- Create button -->
<a href="@Url.Action("Create", "Product")" class="btn btn-primary mb-3">Create New Product</a>

<!-- Cards container -->
<div id="productsContainer" class="row">
    <div id="modalPlaceholder"></div>
    @foreach (var p in Model.Products)
    {
        <div class="col-md-4 mb-4">
            <div class="card h-100">
                <img src="@p.Image" class="card-img-top" style="height:200px; object-fit:contain;" alt="@p.Title" />
                <div class="card-body d-flex flex-column">
                    <h5 class="card-title">@p.Title</h5>
                    <p class="card-text">@p.Description</p>
                    <p><strong>Price:</strong> $@p.Price</p>
                    <div class="mt-auto">
                        <a href="@Url.Action("Edit", "Product", new { id = p.Id })" class="btn btn-sm btn-warning">Update</a>
                        <form asp-action="Delete" asp-controller="Products" asp-route-id="@p.Id" method="post" class="d-inline" onsubmit="return confirm('Delete?');">
                            <button type="submit" class="btn btn-sm btn-danger">Delete</button>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    }
</div>

<!-- Pagination container -->
<nav>
    <ul class="pagination justify-content-center" id="paginationContainer">
        @for (int i = 1; i <= Model.TotalPages; i++)
        {
            <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                <a class="page-link" href="javascript:void(0)" onclick="goToPage(@i)">@i</a>
            </li>
        }
    </ul>
</nav>

@section Scripts {
    <script>
        let currentPage = @Model.CurrentPage;
        let totalPages = @Model.TotalPages;

        async function loadData(search = '', page = 1) {
            const resp = await fetch(`/Product/GetProductsJson?search=${encodeURIComponent(search)}&page=${page}`);
            const data = await resp.json();
            renderProducts(data.products);
            renderPagination(data.currentPage, data.totalPages);
        }

        function renderProducts(products) {
            const container = document.getElementById('productsContainer');
            container.innerHTML = '';
            if (!products || products.length === 0) {
                container.innerHTML = '<p>No products found.</p>';
                return;
            }
            products.forEach(p => {
                container.innerHTML += `
                <div class="col-md-4 mb-4">
                  <div class="card h-100">
                    <img src="${p.image}" class="card-img-top" style="height:200px; object-fit:contain;" alt="${p.title}" />
                    <div class="card-body d-flex flex-column">
                      <h5 class="card-title">${p.title}</h5>
                      <p class="card-text">${p.description}</p>
                      <p><strong>Price:</strong> $${p.price}</p>
                      <div class="mt-auto">
                        <a href="/Products/Edit/${p.id}" class="btn btn-sm btn-warning">Update</a>
                        <form action="/Products/Delete/${p.id}" method="post" class="d-inline">
                          <button type="submit" class="btn btn-sm btn-danger">Delete</button>
                        </form>
                      </div>
                    </div>
                  </div>
                </div>`;
            });
        }

        function renderPagination(page, total) {
            currentPage = page;
            totalPages = total;
            const nav = document.getElementById('paginationContainer');
            nav.innerHTML = '';
            for (let i = 1; i <= totalPages; i++) {
                nav.innerHTML += `<li class="page-item ${i === currentPage ? 'active' : ''}">
                  <a class="page-link" href="javascript:void(0)" onclick="goToPage(${i})">${i}</a>
                </li>`;
            }
        }

        function goToPage(page) {
            const search = document.getElementById('searchInput').value;
            loadData(search, page);
        }

        document.getElementById('searchInput').addEventListener('input', e => {
            loadData(e.target.value, 1);
        });

    </script>
}
